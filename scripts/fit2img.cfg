# Plot the fit to experimental I(s) data with or without errors
# Optimized for gnuplot 4.4

if (!exists("sscale")) sscale = 1.0

set terminal unknown
plot inputfile using 1:(valid(4) ? $4 : $3) with points  # To compute s and I(s) range



set terminal pngcairo size GPVAL_DATA_X_MAX * 100 * sscale + 5, 4 * 100 + 38 truecolor # transparent
set output outputfile
set multiplot

set xrange [0:GPVAL_DATA_X_MAX * sscale]
set yrange [log10(GPVAL_DATA_Y_MAX) - 3.8 : log10(GPVAL_DATA_Y_MAX) + 0.2]

set xtics border offset -0.3, 0 nomirror font "arial, 12" 0, 1
set ytics nomirror log10(GPVAL_DATA_Y_MAX * 10), -1, log10(GPVAL_DATA_Y_MAX / 1000.0)

if (exists("I0"))  set yrange [log10(I0) - 3.7 : log10(I0) + 0.3]
if (exists("I0"))  set ytics nomirror  log10(I0),-1,log10(I0/1000.0)

set bmargin 2    # ~38px
set tmargin 0
set lmargin 0.5  #  ~5px
set rmargin 0
unset key
set border 3 linecolor rgb "#9bb3db"

set bars small
set style line 1 linecolor rgb "#d7e1f1" pointtype 7 pointsize 0.3  #  20% blue error bars
set style line 3 linecolor rgb "#3768b8" pointtype 7 pointsize 0.4  # 100% blue dots
set style line 4 linecolor rgb "#f18c8d" pointtype 7 pointsize 0.3  #  50% red  dots
set style line 5 linecolor rgb "#ed6869" linewidth 2.7              #  66% red  fit
set style line 9 linecolor rgb "#ffffff" linewidth 0                # invisible lines


plot inputfile using 1:4 with lines linestyle 9  # To check if there is a 4th column

if (GPVAL_DATA_X_MIN < GPVAL_DATA_X_MAX) \
plot inputfile using ($1 * sscale):($2 > 0 ? log10($2) : 1/0):(0.434*$3/$2) with errorbars linestyle 1, \
            '' using ($1 * sscale):($2 > 0 ? log10($2) : 1/0)               with points    linestyle 3, \
            '' using ($1 * sscale):($2 < 0 ? log10($2) : 1/0)               with points    linestyle 4, \
            '' using ($1 * sscale):(log10($4))                              with lines     linestyle 5; \
else \
plot inputfile using ($1 * sscale):($2 > 0 ? log10($2) : 1/0)               with points    linestyle 3, \
            '' using ($1 * sscale):($2 < 0 ? log10($2) : 1/0)               with points    linestyle 4, \
            '' using ($1 * sscale):(log10($3))                              with lines     linestyle 5
